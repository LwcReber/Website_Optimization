{"version":3,"sources":["js/main.js"],"names":["selectRandomCrust","randomCrust","ingredientItemizer","makeRandomPizza","pizza","numberOfMeats","numberOfNonMeats","floor","random","numberOfCheeses","k","selectRandomCheese","pizzaElementGenerator","i","pizzaContainer","pizzaImageContainer","pizzaImage","pizzaDescriptionContainer","pizzaName","document","createElement","height","appendChild","y","ul","resizePizzas","changeSliderLabel","querySelector","innerHTML","console","size","newWidth","log","randomPizzaContainers","querySelectorAll","sizeSwitcher","changePizzaSizes","window","generator","adj","noun","adjectives","pizzasDiv","length","randomNoun","parseInt","Math","nouns","randomAdjective","capitalize","randomNumberAdj","randomNumberNoun","logAverageFrame","times","numberOfEntries","sum","duration","updatePositions","frame","performance","mark","items","scrollTop","body","phase","sin","style","left","basicLeft","measure","getEntriesByName","pizzaIngredients","meats","String","insulting","places","sauces","randomNonMeat","selectRandomSauce","randomSauce","selectRandomMeat","nonMeats","cheeses","crusts","string","addEventListener","timesToUpdatePosition","j","selectRandomNonMeat","s","elem","requestAnimationFrame","classList","add","width","id","src","randomName","timeToResize","getElementById","timeToGenerate","onload","className","top"],"mappings":"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","file":"main.js","sourcesContent":["/*\n欢迎来到我们的60fps项目！你的目标是使Cam's Pizzeria网站能流畅的运行在60fps下。\n\n在这里的代码中主要有两个问题使性能低于60fps。你能发现并修复它们吗？\n\n在代码中，你会发现一些使用User Timing API(window.performance)的例子，它们使用\nconsole.log()将帧率数据输入到浏览器的控制台中。如果你想了解更多关于User Timing API\n的信息，请访问：http://www.html5rocks.com/en/tutorials/webperformance/usertiming/\n\n\n创建者:\nCameron Pittman, Udacity 课程开发者\ncameron@udacity.com\n*/\n\n// 你可能已经发现了，这个网站会随机地生成披萨。\n// 下面的数组是所有可能组成披萨的原料。\nvar pizzaIngredients = {};\npizzaIngredients.meats = [\n  \"Pepperoni\",\n  \"Sausage\",\n  \"Fennel Sausage\",\n  \"Spicy Sausage\",\n  \"Chicken\",\n  \"BBQ Chicken\",\n  \"Chorizo\",\n  \"Chicken Andouille\",\n  \"Salami\",\n  \"Tofu\",\n  \"Bacon\",\n  \"Canadian Bacon\",\n  \"Proscuitto\",\n  \"Italian Sausage\",\n  \"Ground Beef\",\n  \"Anchovies\",\n  \"Turkey\",\n  \"Ham\",\n  \"Venison\",\n  \"Lamb\",\n  \"Duck\",\n  \"Soylent Green\",\n  \"Carne Asada\",\n  \"Soppressata Picante\",\n  \"Coppa\",\n  \"Pancetta\",\n  \"Bresola\",\n  \"Lox\",\n  \"Guanciale\",\n  \"Chili\",\n  \"Beef Jerky\",\n  \"Pastrami\",\n  \"Kielbasa\",\n  \"Scallops\",\n  \"Filet Mignon\"\n];\npizzaIngredients.nonMeats = [\n  \"White Onions\",\n  \"Red Onions\",\n  \"Sauteed Onions\",\n  \"Green Peppers\",\n  \"Red Peppers\",\n  \"Banana Peppers\",\n  \"Ghost Peppers\",\n  \"Habanero Peppers\",\n  \"Jalapeno Peppers\",\n  \"Stuffed Peppers\",\n  \"Spinach\",\n  \"Tomatoes\",\n  \"Pineapple\",\n  \"Pear Slices\",\n  \"Apple Slices\",\n  \"Mushrooms\",\n  \"Arugula\",\n  \"Basil\",\n  \"Fennel\",\n  \"Rosemary\",\n  \"Cilantro\",\n  \"Avocado\",\n  \"Guacamole\",\n  \"Salsa\",\n  \"Swiss Chard\",\n  \"Kale\",\n  \"Sun Dried Tomatoes\",\n  \"Walnuts\",\n  \"Artichoke\",\n  \"Asparagus\",\n  \"Caramelized Onions\",\n  \"Mango\",\n  \"Garlic\",\n  \"Olives\",\n  \"Cauliflower\",\n  \"Polenta\",\n  \"Fried Egg\",\n  \"Zucchini\",\n  \"Hummus\"\n];\npizzaIngredients.cheeses = [\n  \"American Cheese\",\n  \"Swiss Cheese\",\n  \"Goat Cheese\",\n  \"Mozzarella Cheese\",\n  \"Parmesean Cheese\",\n  \"Velveeta Cheese\",\n  \"Gouda Cheese\",\n  \"Muenster Cheese\",\n  \"Applewood Cheese\",\n  \"Asiago Cheese\",\n  \"Bleu Cheese\",\n  \"Boursin Cheese\",\n  \"Brie Cheese\",\n  \"Cheddar Cheese\",\n  \"Chevre Cheese\",\n  \"Havarti Cheese\",\n  \"Jack Cheese\",\n  \"Pepper Jack Cheese\",\n  \"Gruyere Cheese\",\n  \"Limberger Cheese\",\n  \"Manchego Cheese\",\n  \"Marscapone Cheese\",\n  \"Pecorino Cheese\",\n  \"Provolone Cheese\",\n  \"Queso Cheese\",\n  \"Roquefort Cheese\",\n  \"Romano Cheese\",\n  \"Ricotta Cheese\",\n  \"Smoked Gouda\"\n];\npizzaIngredients.sauces = [\n  \"Red Sauce\",\n  \"Marinara\",\n  \"BBQ Sauce\",\n  \"No Sauce\",\n  \"Hot Sauce\"\n];\npizzaIngredients.crusts = [\n  \"White Crust\",\n  \"Whole Wheat Crust\",\n  \"Flatbread Crust\",\n  \"Stuffed Crust\"\n];\n\n// 名称生成器取自 http://saturdaykid.com/usernames/generator.html\n// 将每个单词的首字母大写\nString.prototype.capitalize = function() {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\n// 用生成器发出的随机数来从数组中取出形容词\nfunction getAdj(x){\n  switch(x) {\n    case \"dark\":\n      var dark = [\"dark\",\"morbid\", \"scary\", \"spooky\", \"gothic\", \"deviant\", \"creepy\", \"sadistic\", \"black\", \"dangerous\", \"dejected\", \"haunted\",\n      \"morose\", \"tragic\", \"shattered\", \"broken\", \"sad\", \"melancholy\", \"somber\", \"dark\", \"gloomy\", \"homicidal\", \"murderous\", \"shady\", \"misty\",\n      \"dusky\", \"ghostly\", \"shadowy\", \"demented\", \"cursed\", \"insane\", \"possessed\", \"grotesque\", \"obsessed\"];\n      return dark;\n    case \"color\":\n      var colors = [\"blue\", \"green\", \"purple\", \"grey\", \"scarlet\", \"NeonGreen\", \"NeonBlue\", \"NeonPink\", \"HotPink\", \"pink\", \"black\", \"red\",\n      \"maroon\", \"silver\", \"golden\", \"yellow\", \"orange\", \"mustard\", \"plum\", \"violet\", \"cerulean\", \"brown\", \"lavender\", \"violet\", \"magenta\",\n      \"chestnut\", \"rosy\", \"copper\", \"crimson\", \"teal\", \"indigo\", \"navy\", \"azure\", \"periwinkle\", \"brassy\", \"verdigris\", \"veridian\", \"tan\",\n      \"raspberry\", \"beige\", \"sandy\", \"ElectricBlue\", \"white\", \"champagne\", \"coral\", \"cyan\"];\n      return colors;\n    case \"whimsical\":\n      var whimsy = [\"whimsical\", \"silly\", \"drunken\", \"goofy\", \"funny\", \"weird\", \"strange\", \"odd\", \"playful\", \"clever\", \"boastful\", \"breakdancing\",\n      \"hilarious\", \"conceited\", \"happy\", \"comical\", \"curious\", \"peculiar\", \"quaint\", \"quirky\", \"fancy\", \"wayward\", \"fickle\", \"yawning\", \"sleepy\",\n      \"cockeyed\", \"dizzy\", \"dancing\", \"absurd\", \"laughing\", \"hairy\", \"smiling\", \"perplexed\", \"baffled\", \"cockamamie\", \"vulgar\", \"hoodwinked\",\n      \"brainwashed\"];\n      return whimsy;\n    case \"shiny\":\n      var shiny = [\"sapphire\", \"opal\", \"silver\", \"gold\", \"platinum\", \"ruby\", \"emerald\", \"topaz\", \"diamond\", \"amethyst\", \"turquoise\",\n      \"starlit\", \"moonlit\", \"bronze\", \"metal\", \"jade\", \"amber\", \"garnet\", \"obsidian\", \"onyx\", \"pearl\", \"copper\", \"sunlit\", \"brass\", \"brassy\",\n      \"metallic\"];\n      return shiny;\n    case \"noisy\":\n      var noisy = [\"untuned\", \"loud\", \"soft\", \"shrieking\", \"melodious\", \"musical\", \"operatic\", \"symphonic\", \"dancing\", \"lyrical\", \"harmonic\",\n      \"orchestral\", \"noisy\", \"dissonant\", \"rhythmic\", \"hissing\", \"singing\", \"crooning\", \"shouting\", \"screaming\", \"wailing\", \"crying\", \"howling\",\n      \"yelling\", \"hollering\", \"caterwauling\", \"bawling\", \"bellowing\", \"roaring\", \"squealing\", \"beeping\", \"knocking\", \"tapping\", \"rapping\",\n      \"humming\", \"scatting\", \"whispered\", \"whispering\", \"rasping\", \"buzzing\", \"whirring\", \"whistling\", \"whistled\"];\n      return noisy;\n    case \"apocalyptic\":\n      var apocalyptic = [\"nuclear\", \"apocalyptic\", \"desolate\", \"atomic\", \"zombie\", \"collapsed\", \"grim\", \"fallen\", \"collapsed\", \"cannibalistic\",\n      \"radioactive\", \"toxic\", \"poisonous\", \"venomous\", \"disastrous\", \"grimy\", \"dirty\", \"undead\", \"bloodshot\", \"rusty\", \"glowing\", \"decaying\",\n      \"rotten\", \"deadly\", \"plagued\", \"decimated\", \"rotting\", \"putrid\", \"decayed\", \"deserted\", \"acidic\"];\n      return apocalyptic;\n    case \"insulting\":\n      var insulting = [\"stupid\", \"idiotic\", \"fat\", \"ugly\", \"hideous\", \"grotesque\", \"dull\", \"dumb\", \"lazy\", \"sluggish\", \"brainless\", \"slow\",\n      \"gullible\", \"obtuse\", \"dense\", \"dim\", \"dazed\", \"ridiculous\", \"witless\", \"daft\", \"crazy\", \"vapid\", \"inane\", \"mundane\", \"hollow\", \"vacuous\",\n      \"boring\", \"insipid\", \"tedious\", \"monotonous\", \"weird\", \"bizarre\", \"backward\", \"moronic\", \"ignorant\", \"scatterbrained\", \"forgetful\", \"careless\",\n      \"lethargic\", \"insolent\", \"indolent\", \"loitering\", \"gross\", \"disgusting\", \"bland\", \"horrid\", \"unseemly\", \"revolting\", \"homely\", \"deformed\",\n      \"disfigured\", \"offensive\", \"cowardly\", \"weak\", \"villainous\", \"fearful\", \"monstrous\", \"unattractive\", \"unpleasant\", \"nasty\", \"beastly\", \"snide\",\n      \"horrible\", \"syncophantic\", \"unhelpful\", \"bootlicking\"];\n      return insulting;\n    case \"praise\":\n      var praise = [\"beautiful\", \"intelligent\", \"smart\", \"genius\", \"ingenious\", \"gorgeous\", \"pretty\", \"witty\", \"angelic\", \"handsome\", \"graceful\",\n      \"talented\", \"exquisite\", \"enchanting\", \"fascinating\", \"interesting\", \"divine\", \"alluring\", \"ravishing\", \"wonderful\", \"magnificient\", \"marvelous\",\n      \"dazzling\", \"cute\", \"charming\", \"attractive\", \"nifty\", \"delightful\", \"superior\", \"amiable\", \"gentle\", \"heroic\", \"courageous\", \"valiant\", \"brave\",\n      \"noble\", \"daring\", \"fearless\", \"gallant\", \"adventurous\", \"cool\", \"enthusiastic\", \"fierce\", \"awesome\", \"radical\", \"tubular\", \"fearsome\",\n      \"majestic\", \"grand\", \"stunning\"];\n      return praise;\n    case \"scientific\":\n      var scientific = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n      \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n      \"extinct\", \"galactic\"];\n      return scientific;\n    default:\n      var scientific_default = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n      \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n      \"extinct\", \"galactic\"];\n      return scientific_default;\n  }\n}\n\n// 用生成器发出的随机数来从数组中取出名词\nfunction getNoun(y) {\n  switch(y) {\n    case \"animals\":\n      var animals = [\"flamingo\", \"hedgehog\", \"owl\", \"elephant\", \"pussycat\", \"alligator\", \"dachsund\", \"poodle\", \"beagle\", \"crocodile\", \"kangaroo\",\n      \"wallaby\", \"woodpecker\", \"eagle\", \"falcon\", \"canary\", \"parrot\", \"parakeet\", \"hamster\", \"gerbil\", \"squirrel\", \"rat\", \"dove\", \"toucan\",\n      \"raccoon\", \"vulture\", \"peacock\", \"goldfish\", \"rook\", \"koala\", \"skunk\", \"goat\", \"rooster\", \"fox\", \"porcupine\", \"llama\", \"grasshopper\",\n      \"gorilla\", \"monkey\", \"seahorse\", \"wombat\", \"wolf\", \"giraffe\", \"badger\", \"lion\", \"mouse\", \"beetle\", \"cricket\", \"nightingale\",\n      \"hawk\", \"trout\", \"squid\", \"octopus\", \"sloth\", \"snail\", \"locust\", \"baboon\", \"lemur\", \"meerkat\", \"oyster\", \"frog\", \"toad\", \"jellyfish\",\n      \"butterfly\", \"caterpillar\", \"tiger\", \"hyena\", \"zebra\", \"snail\", \"pig\", \"weasel\", \"donkey\", \"penguin\", \"crane\", \"buzzard\", \"vulture\",\n      \"rhino\", \"hippopotamus\", \"dolphin\", \"sparrow\", \"beaver\", \"moose\", \"minnow\", \"otter\", \"bat\", \"mongoose\", \"swan\", \"firefly\", \"platypus\"];\n      return animals;\n    case \"profession\":\n      var professions = [\"doctor\", \"lawyer\", \"ninja\", \"writer\", \"samurai\", \"surgeon\", \"clerk\", \"artist\", \"actor\", \"engineer\", \"mechanic\",\n      \"comedian\", \"fireman\", \"nurse\", \"RockStar\", \"musician\", \"carpenter\", \"plumber\", \"cashier\", \"electrician\", \"waiter\", \"president\", \"governor\",\n      \"senator\", \"scientist\", \"programmer\", \"singer\", \"dancer\", \"director\", \"mayor\", \"merchant\", \"detective\", \"investigator\", \"navigator\", \"pilot\",\n      \"priest\", \"cowboy\", \"stagehand\", \"soldier\", \"ambassador\", \"pirate\", \"miner\", \"police\"];\n      return professions;\n    case \"fantasy\":\n      var fantasy = [\"centaur\", \"wizard\", \"gnome\", \"orc\", \"troll\", \"sword\", \"fairy\", \"pegasus\", \"halfling\", \"elf\", \"changeling\", \"ghost\",\n      \"knight\", \"squire\", \"magician\", \"witch\", \"warlock\", \"unicorn\", \"dragon\", \"wyvern\", \"princess\", \"prince\", \"king\", \"queen\", \"jester\",\n      \"tower\", \"castle\", \"kraken\", \"seamonster\", \"mermaid\", \"psychic\", \"seer\", \"oracle\"];\n      return fantasy;\n    case \"music\":\n      var music = [\"violin\", \"flute\", \"bagpipe\", \"guitar\", \"symphony\", \"orchestra\", \"piano\", \"trombone\", \"tuba\", \"opera\", \"drums\",\n      \"harpsichord\", \"harp\", \"harmonica\", \"accordion\", \"tenor\", \"soprano\", \"baritone\", \"cello\", \"viola\", \"piccolo\", \"ukelele\", \"woodwind\", \"saxophone\",\n      \"bugle\", \"trumpet\", \"sousaphone\", \"cornet\", \"stradivarius\", \"marimbas\", \"bells\", \"timpani\", \"bongos\", \"clarinet\", \"recorder\", \"oboe\", \"conductor\",\n      \"singer\"];\n      return music;\n    case \"horror\":\n      var horror = [\"murderer\", \"chainsaw\", \"knife\", \"sword\", \"murder\", \"devil\", \"killer\", \"psycho\", \"ghost\", \"monster\", \"godzilla\", \"werewolf\",\n      \"vampire\", \"demon\", \"graveyard\", \"zombie\", \"mummy\", \"curse\", \"death\", \"grave\", \"tomb\", \"beast\", \"nightmare\", \"frankenstein\", \"specter\",\n      \"poltergeist\", \"wraith\", \"corpse\", \"scream\", \"massacre\", \"cannibal\", \"skull\", \"bones\", \"undertaker\", \"zombie\", \"creature\", \"mask\", \"psychopath\",\n      \"fiend\", \"satanist\", \"moon\", \"fullMoon\"];\n      return horror;\n    case \"gross\":\n      var gross = [\"slime\", \"bug\", \"roach\", \"fluid\", \"pus\", \"booger\", \"spit\", \"boil\", \"blister\", \"orifice\", \"secretion\", \"mucus\", \"phlegm\",\n      \"centipede\", \"beetle\", \"fart\", \"snot\", \"crevice\", \"flatulence\", \"juice\", \"mold\", \"mildew\", \"germs\", \"discharge\", \"toilet\", \"udder\", \"odor\", \"substance\",\n      \"fluid\", \"moisture\", \"garbage\", \"trash\", \"bug\"];\n      return gross;\n    case \"everyday\":\n      var everyday = [\"mirror\", \"knife\", \"fork\", \"spork\", \"spoon\", \"tupperware\", \"minivan\", \"suburb\", \"lamp\", \"desk\", \"stereo\", \"television\", \"TV\",\n      \"book\", \"car\", \"truck\", \"soda\", \"door\", \"video\", \"game\", \"computer\", \"calender\", \"tree\", \"plant\", \"flower\", \"chimney\", \"attic\", \"kitchen\",\n      \"garden\", \"school\", \"wallet\", \"bottle\"];\n      return everyday;\n    case \"jewelry\":\n      var jewelry = [\"earrings\", \"ring\", \"necklace\", \"pendant\", \"choker\", \"brooch\", \"bracelet\", \"cameo\", \"charm\", \"bauble\", \"trinket\", \"jewelry\",\n      \"anklet\", \"bangle\", \"locket\", \"finery\", \"crown\", \"tiara\", \"blingBling\", \"chain\", \"rosary\", \"jewel\", \"gemstone\", \"beads\", \"armband\", \"pin\",\n      \"costume\", \"ornament\", \"treasure\"];\n      return jewelry;\n    case \"places\":\n      var places = [\"swamp\", \"graveyard\", \"cemetery\", \"park\", \"building\", \"house\", \"river\", \"ocean\", \"sea\", \"field\", \"forest\", \"woods\", \"neighborhood\",\n      \"city\", \"town\", \"suburb\", \"country\", \"meadow\", \"cliffs\", \"lake\", \"stream\", \"creek\", \"school\", \"college\", \"university\", \"library\", \"bakery\",\n      \"shop\", \"store\", \"theater\", \"garden\", \"canyon\", \"highway\", \"restaurant\", \"cafe\", \"diner\", \"street\", \"road\", \"freeway\", \"alley\"];\n      return places;\n    case \"scifi\":\n      var scifi = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n      \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n      \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n      \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n      return scifi;\n    default:\n      var scifi_default = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n      \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n      \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n      \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n      return scifi_default;\n  }\n}\n\nvar adjectives = [\"dark\", \"color\", \"whimsical\", \"shiny\", \"noisy\", \"apocalyptic\", \"insulting\", \"praise\", \"scientific\"];  // 披萨名字形容词的种类\nvar nouns = [\"animals\", \"everyday\", \"fantasy\", \"gross\", \"horror\", \"jewelry\", \"places\", \"scifi\"];                        // 披萨名字名词的种类\n\n// 生成器随机地为getAdj和getNoun函数生成数字，并返回一个新的披萨名称\nfunction generator(adj, noun) {\n  var adjectives = getAdj(adj);\n  var nouns = getNoun(noun);\n  var randomAdjective = parseInt(Math.random() * adjectives.length);\n  var randomNoun = parseInt(Math.random() * nouns.length);\n  var name = \"The \" + adjectives[randomAdjective].capitalize() + \" \" + nouns[randomNoun].capitalize();\n  return name;\n}\n\n// 选择随机的形容词及名词\nfunction randomName() {\n  var randomNumberAdj = parseInt(Math.random() * adjectives.length);\n  var randomNumberNoun = parseInt(Math.random() * nouns.length);\n  return generator(adjectives[randomNumberAdj], nouns[randomNumberNoun]);\n}\n\n// 这些函数从各自的原料目录中取出并返回随机的原料\nvar selectRandomMeat = function() {\n  var randomMeat = pizzaIngredients.meats[Math.floor((Math.random() * pizzaIngredients.meats.length))];\n  return randomMeat;\n};\n\nvar selectRandomNonMeat = function() {\n  var randomNonMeat = pizzaIngredients.nonMeats[Math.floor((Math.random() * pizzaIngredients.nonMeats.length))];\n  return randomNonMeat;\n};\n\nvar selectRandomCheese = function() {\n  var randomCheese = pizzaIngredients.cheeses[Math.floor((Math.random() * pizzaIngredients.cheeses.length))];\n  return randomCheese;\n};\n\nvar selectRandomSauce = function() {\n  var randomSauce = pizzaIngredients.sauces[Math.floor((Math.random() * pizzaIngredients.sauces.length))];\n  return randomSauce;\n};\n\nvar selectRandomCrust = function() {\n  var randomCrust = pizzaIngredients.crusts[Math.floor((Math.random() * pizzaIngredients.crusts.length))];\n  return randomCrust;\n};\n\nvar ingredientItemizer = function(string) {\n  return \"<li>\" + string + \"</li>\";\n};\n\n// 返回嵌套在<li>中的披萨原料字符串\nvar makeRandomPizza = function() {\n  var pizza = \"\";\n\n  var numberOfMeats = Math.floor((Math.random() * 4));\n  var numberOfNonMeats = Math.floor((Math.random() * 3));\n  var numberOfCheeses = Math.floor((Math.random() * 2));\n\n  for (var i = 0; i < numberOfMeats; i++) {\n    pizza = pizza + ingredientItemizer(selectRandomMeat());\n  }\n\n  for (var j = 0; j < numberOfNonMeats; j++) {\n    pizza = pizza + ingredientItemizer(selectRandomNonMeat());\n  }\n\n  for (var k = 0; k < numberOfCheeses; k++) {\n    pizza = pizza + ingredientItemizer(selectRandomCheese());\n  }\n\n  pizza = pizza + ingredientItemizer(selectRandomSauce());\n  pizza = pizza + ingredientItemizer(selectRandomCrust());\n\n  return pizza;\n};\n\n// 为每个披萨分别返回一个DOM元素\nvar pizzaElementGenerator = function(i) {\n  var pizzaContainer,             // 披萨的名称、图片及原料清单容器\n      pizzaImageContainer,        // 披萨图片容器\n      pizzaImage,                 // 披萨的图片\n      pizzaDescriptionContainer,  // 披萨名称及原料清单容器\n      pizzaName,                  // 披萨名称\n      ul;                         // 原料清单\n\n  pizzaContainer = document.createElement(\"div\");\n  pizzaImageContainer = document.createElement(\"div\");\n  pizzaImage = document.createElement(\"img\");\n  pizzaDescriptionContainer = document.createElement(\"div\");\n\n  pizzaContainer.classList.add(\"randomPizzaContainer\");\n  pizzaContainer.style.width = \"33.33%\";\n  pizzaContainer.style.height = \"325px\";\n  pizzaContainer.id = \"pizza\" + i;                // 给每个披萨元素赋一个独一无二的id\n  pizzaImageContainer.style.width=\"35%\";\n\n  pizzaImage.src = \"images/pizza.png\";\n  pizzaImage.classList.add(\"img-responsive\");\n  pizzaImageContainer.appendChild(pizzaImage);\n  pizzaContainer.appendChild(pizzaImageContainer);\n\n\n  pizzaDescriptionContainer.style.width=\"65%\";\n\n  pizzaName = document.createElement(\"h4\");\n  pizzaName.innerHTML = randomName();\n  pizzaDescriptionContainer.appendChild(pizzaName);\n\n  ul = document.createElement(\"ul\");\n  ul.innerHTML = makeRandomPizza();\n  pizzaDescriptionContainer.appendChild(ul);\n  pizzaContainer.appendChild(pizzaDescriptionContainer);\n\n  return pizzaContainer;\n};\n\n// 当网站中\"Our Pizzas\"的滑窗部分移动时调用resizePizzas(size)函数\nvar resizePizzas = function(size) {\n  window.performance.mark(\"mark_start_resize\");   // User Timing API 函数\n\n  // 改变滑窗前披萨的尺寸值\n  function changeSliderLabel(size) {\n    switch(size) {\n      case \"1\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Small\";\n        return;\n      case \"2\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Medium\";\n        return;\n      case \"3\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Large\";\n        return;\n      default:\n        console.log(\"bug in changeSliderLabel\");\n    }\n  }\n\n  changeSliderLabel(size);\n\n   // 直接改变width的百分比来改变pizzaSize\n  function sizeSwitcher (size) {\n    var newWidth;\n    switch(size) {\n      case \"1\":\n        newWidth = 25;\n        break;\n      case \"2\":\n        newWidth = 33.3;\n        break;\n      case \"3\":\n        newWidth = 50;\n        break;\n      default:\n        console.log(\"bug in sizeSwitcher\");\n    }\n    // 先获取randomPizzaContainer的所有元素\n    var randomPizzaContainers = document.querySelectorAll(\".randomPizzaContainer\");\n    // 改变randomPizzaContainer的宽度\n    for (var i = 0; i < randomPizzaContainers.length; i ++) {\n      randomPizzaContainers[i].style.width = newWidth + '%';\n    }\n  }\n\n\n  // 遍历披萨的元素并改变它们的宽度\n  function changePizzaSizes(size) {\n    sizeSwitcher (size);\n  }\n\n  changePizzaSizes(size);\n\n  // User Timing API 太棒了\n  window.performance.mark(\"mark_end_resize\");\n  window.performance.measure(\"measure_pizza_resize\", \"mark_start_resize\", \"mark_end_resize\");\n  var timeToResize = window.performance.getEntriesByName(\"measure_pizza_resize\");\n  console.log(\"Time to resize pizzas: \" + timeToResize[timeToResize.length-1].duration + \"ms\");\n};\n\nwindow.performance.mark(\"mark_start_generating\"); // 收集timing数据\n\n// 这个for循环在页面加载时创建并插入了所有的披萨\nfor (var i = 2; i < 100; i++) {\n  var pizzasDiv = document.getElementById(\"randomPizzas\");\n  pizzasDiv.appendChild(pizzaElementGenerator(i));\n}\n\n// 使用User Timing API。这里的测量数据告诉了你生成初始的披萨用了多长时间\nwindow.performance.mark(\"mark_end_generating\");\nwindow.performance.measure(\"measure_pizza_generation\", \"mark_start_generating\", \"mark_end_generating\");\nvar timeToGenerate = window.performance.getEntriesByName(\"measure_pizza_generation\");\nconsole.log(\"Time to generate pizzas on load: \" + timeToGenerate[0].duration + \"ms\");\n\n// 背景披萨滚动时调用函数的次数和\n// 由updatePositions()函数使用，用来决定什么时候记录平均帧率\nvar frame = 0;\n\n// 记录滚动时背景滑窗披萨移动的每10帧的平均帧率\nfunction logAverageFrame(times) {   // times参数是updatePositions()由User Timing得到的测量数据\n  var numberOfEntries = times.length;\n  var sum = 0;\n  for (var i = numberOfEntries - 1; i > numberOfEntries - 11; i--) {\n    sum = sum + times[i].duration;\n  }\n  console.log(\"Average scripting time to generate last 10 frames: \" + sum / 10 + \"ms\");\n}\n\n// 下面的关于背景滑窗披萨的代码来自于Ilya的demo:\n// https://www.igvita.com/slides/2012/devtools-tips-and-tricks/jank-demo.html\n\n// 基于滚动条位置移动背景中的披萨滑窗\nfunction updatePositions() {\n  frame++;\n  window.performance.mark(\"mark_start_frame\");\n\n  var items = document.querySelectorAll('.mover');\n  // scrollTop先读取 ，避免强制同步布局\n  var scrollTop = document.body.scrollTop / 1250 ;\n  for (var i = 0; i < items.length; i++) {\n    var phase = Math.sin(scrollTop + (i % 5));\n    items[i].style.left = items[i].basicLeft + 100 * phase + 'px';\n  }\n\n  // 再次使用User Timing API。这很值得学习\n  // 能够很容易地自定义测量维度\n  window.performance.mark(\"mark_end_frame\");\n  window.performance.measure(\"measure_frame_duration\", \"mark_start_frame\", \"mark_end_frame\");\n  if (frame % 10 === 0) {\n    var timesToUpdatePosition = window.performance.getEntriesByName(\"measure_frame_duration\");\n    logAverageFrame(timesToUpdatePosition);\n  }\n\n}\n\n// 在页面滚动时运行updatePositions函数\nwindow.addEventListener('scroll', function() {\n  // 使用requestAnimationFrame提高性能\n  requestAnimationFrame(updatePositions);\n});\n\n// js异步执行，披萨滑窗应该在window.onload才生成\nwindow.onload = function() {\n  var cols = 8;\n  var s = 256;\n  for (var i = 0; i < 200; i++) {\n    var elem = document.createElement('img');\n    elem.className = 'mover';\n    elem.src = \"images/pizza.png\";\n    elem.style.height = \"100px\";\n    elem.style.width = \"73.333px\";\n    elem.basicLeft = (i % cols) * s;\n    elem.style.top = (Math.floor(i / cols) * s) + 'px';\n    document.querySelector(\"#movingPizzas1\").appendChild(elem);\n  }\n  requestAnimationFrame(updatePositions);\n}\n"]}